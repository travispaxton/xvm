name: Build, Release, and Publish

on:
  workflow_dispatch: # Allows manual triggering from GitHub Actions UIon:
  push:
    branches:
      - simplify-tasks

jobs:
  build:
    name: Build and Create Release
    runs-on: [ ubuntu-latest ]
    #runs-on: ${{ matrix.os }}
    #strategy:
    #  matrix:
    #    os: [ubuntu-latest, windows-latest, macos-latest]
        # Cross platform build.
        # The existing binary launchers are for windowx x64, linux x64 and macos multi-binary x64/aarch64
        # Hence, we can get away with skipping the "arch" filter, I tbink, as long as we don't use the
        # jreelaser templates.
        #arch: [x64, arm64]
        #exclude:
        #   - os: windows-latest
        #     arch: arm64
        #   - os: linux-latest
        #     arch: arm64
        #   -
        #   - os: mac-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          show-progress: true

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 21

      - name: Read VERSION file
        id: read_version
        shell: bash
        run: |
          VERSION=$(cat VERSION)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          if [[ "$VERSION" == *"SNAPSHOT"* ]]; then
            echo "This is a SNAPSHOT version. Skipping release."
            exit 0
          else
            echo "This is a release version. Proceeding with release."
            current_release="$VERSION"
            echo "CURRENT_RELEASE=$VERSION" >> $GITHUB_ENV
          fi 
          last_release=$(gh release view --json tagName  -q '.tagName')
          echo "LAST_RELEASE=$last_release" >> $GITHUB_ENV
          if [ "$current_release" == "$last_release" ]; then
            echo "This version has already been released. Skipping release."
            exit 0
          fi

      - name: Build distribution with Gradle
        if: env.CURRENT_RELEASE != ''
        run: | 
          ./gradlew xdk:withLaunchersDistTar
          ./gradlew xdk:withLaunchersDistZip
          # TODO: Also publish release artifact. Copy credentials from other file

      - name: Upload artifacts
        if: env.CURRENT_RELEASE != ''
        uses: actions/upload-artifact@v4
        with:
          name: xdk-${{ env.VERSION }}-linux.tar.gz
          path: xdk/build/distributions/xdk*linux*.tar.gz
          #name: build-${{ matrix.os }}
          #path: xdk/distributions/xdk*${{ matrix.os }}*.zip
